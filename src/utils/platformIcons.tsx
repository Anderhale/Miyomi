import React, { type ReactNode } from "react";

type IconSize = "sm" | "md";

const sizeClassMap: Record<IconSize, string> = {
  sm: "w-4 h-4",
  md: "w-5 h-5",
};

// Minimal Apple + Monitor SVGs (outline-ish), sized via className
const AppleIcon = ({ className }: { className?: string }) => (
  <svg className={className} fill="currentcolor" viewBox="0 0 1920 1920">
    <g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="m1380.664 0 5.547 52.865c13.923 131.766-31.47 278.7-121.238 393.146-1.359 1.585-2.944 2.717-4.189 4.302 14.943-.566 29.885-1.698 45.394-.226 67.694 2.83 245.646 28.64 362.016 202.176l31.583 47.205-47.318 31.47c-40.752 25.81-165.839 118.748-164.141 293.077 1.924 220.742 179.876 301.68 200.14 310.17l48.562 20.377-16.3 50.26c-13.472 43.47-52.3 154.746-128.144 267.947-72.335 107.768-162.217 242.024-314.246 244.854-71.769 1.811-117.615-19.81-159.613-38.262-39.96-17.66-74.26-32.828-131.086-32.828-60.11 0-96.448 15.735-138.558 34.073-39.507 17.207-84.335 36.677-146.482 39.28-2.83.114-5.66.114-8.264.114-147.274 0-249.608-150.897-317.755-251.306l-5.187-7.735c-170.414-256.903-265.7-675.19-108.466-953.793 86.598-153.614 244.174-250.627 411.258-253.117 65.09-.906 124.974 19.47 176.594 39.846 8.83-119.88 65.883-231.722 125.087-303.944C1061.89 84.448 1206.448 7.245 1327.573 2.264L1380.664 0Zm-82.75 562.948c-73.694-7.81-144.331 21.282-207.157 46.639-47.432 19.13-88.297 35.545-126.22 35.545-32.375 0-66.335-10.98-101.654-24.791l-5.433-.453-.227-1.698c-7.471-3.056-14.942-6-22.64-9.056C785 588.984 730.55 562.608 676.102 567.25c-127.125 1.924-247.684 76.863-314.586 195.61-144.897 256.627-23.658 647.057 108.787 842.215 70.41 103.805 145.123 206.365 227.76 201.724 40.978-1.698 69.505-14.15 105.843-29.885 46.865-20.49 100.07-43.582 183.725-43.582 80.712 0 131.765 22.527 176.82 42.45 37.242 16.527 68.146 30.451 111.729 28.64 86.372-1.585 146.708-81.731 222.326-194.706 49.582-73.92 81.278-146.708 99.277-195.271-76.637-45.96-220.628-162.443-222.666-389.411-1.698-180.103 97.24-294.662 165.613-352.168-85.353-92.598-195.385-107.88-242.816-109.918Zm-23.093-438.314c-76.524 20.49-158.707 72.449-211.233 136.86l-.113.113c-46.525 56.827-95.994 150.784-101.088 247.457 84.674-12.678 165.273-71.769 213.61-133.01 58.411-74.374 93.39-164.821 98.824-251.42Z" fill-rule="evenodd"></path> </g>
  </svg>
);

const MonitorIcon = ({ className }: { className?: string }) => (
  <svg
    className={className}
    viewBox="0 0 24 24"
    fill="currentColor"
    aria-hidden="true"
    focusable="false"
  >
    <path d="M3 4h18a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1h-7v2h3a1 1 0 1 1 0 2H7a1 1 0 1 1 0-2h3v-2H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1Zm1 2v9h16V6H4Z" />
  </svg>
);

const AndroidRobotIcon = ({
  className,
}: {
  className?: string;
}) => (
  <svg
    className={className}
    viewBox="0 0 50 50"
    fill="currentColor"
    aria-hidden="true"
    focusable="false"
  >
    <path d="M 16.28125 0.03125 C 16.152344 0.0546875 16.019531 0.078125 15.90625 0.15625 C 15.449219 0.464844 15.347656 1.105469 15.65625 1.5625 L 17.8125 4.78125 C 14.480469 6.546875 11.996094 9.480469 11.1875 13 L 38.8125 13 C 38.003906 9.480469 35.519531 6.546875 32.1875 4.78125 L 34.34375 1.5625 C 34.652344 1.105469 34.550781 0.464844 34.09375 0.15625 C 33.632813 -0.152344 32.996094 -0.0195313 32.6875 0.4375 L 30.3125 3.9375 C 28.664063 3.335938 26.875 3 25 3 C 23.125 3 21.335938 3.335938 19.6875 3.9375 L 17.3125 0.4375 C 17.082031 0.09375 16.664063 -0.0429688 16.28125 0.03125 Z M 19.5 8 C 20.328125 8 21 8.671875 21 9.5 C 21 10.332031 20.328125 11 19.5 11 C 18.667969 11 18 10.332031 18 9.5 C 18 8.671875 18.667969 8 19.5 8 Z M 30.5 8 C 31.332031 8 32 8.671875 32 9.5 C 32 10.332031 31.332031 11 30.5 11 C 29.671875 11 29 10.332031 29 9.5 C 29 8.671875 29.671875 8 30.5 8 Z M 8 15 C 6.34375 15 5 16.34375 5 18 L 5 32 C 5 33.65625 6.34375 35 8 35 C 8.351563 35 8.6875 34.925781 9 34.8125 L 9 15.1875 C 8.6875 15.074219 8.351563 15 8 15 Z M 11 15 L 11 37 C 11 38.652344 12.347656 40 14 40 L 36 40 C 37.652344 40 39 38.652344 39 37 L 39 15 Z M 42 15 C 41.648438 15 41.3125 15.074219 41 15.1875 L 41 34.8125 C 41.3125 34.921875 41.648438 35 42 35 C 43.65625 35 45 33.65625 45 32 L 45 18 C 45 16.34375 43.65625 15 42 15 Z M 15 42 L 15 46 C 15 48.207031 16.792969 50 19 50 C 21.207031 50 23 48.207031 23 46 L 23 42 Z M 27 42 L 27 46 C 27 48.207031 28.792969 50 31 50 C 33.207031 50 35 48.207031 35 46 L 35 42 Z"></path>
  </svg>
);

const WindowsLogoIcon = ({
  className,
}: {
  className: string;
}) => (
  <svg
    className={className}
    viewBox="0 0 24 24"
    fill="currentColor"
    aria-hidden="true"
    focusable="false"
  >
    <path d="M3 5.557 10.5 4.557V11.786H3V5.557m7.5 6.657V19.443L3 18.443V12.214h7.5m1-7.774L21 3v8.786H11.5V4.44M21 12.214V21l-9.5-1.44v-7.346H21Z" />
  </svg>
);

const LinuxTuxIcon = ({ className }: { className: string }) => (
  <svg className={className} fill="currentcolor" viewBox="0 0 32 32"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M15.6 8.1c0 .1-.1.1-.1.1h-.1c-.1 0-.1-.1-.2-.2 0 0-.1-.1-.1-.2s0-.1.1-.1l.2.1c.1.1.2.2.2.3m-1.9-1c0-.5-.2-.8-.5-.8 0 0 0 .1-.1.1v.2h.3c0 .2.1.3.1.5h.2m3.6-.5c.2 0 .3.2.4.5h.2c-.1-.1-.1-.2-.1-.3 0-.1 0-.2-.1-.3-.1-.1-.2-.2-.3-.2 0 0-.1.1-.2.1 0 .1.1.1.1.2m-3.1 1.6c-.1 0-.1 0-.1-.1s0-.2.1-.3c.2 0 .3-.1.3-.1.1 0 .1.1.1.1 0 .1-.1.2-.3.4h-.1m-1.1-.1c-.4-.2-.5-.5-.5-1 0-.3 0-.5.2-.7.1-.2.3-.3.5-.3s.3.1.5.3c.1.3.2.6.2.9v.2h.1v-.1c.1 0 .1-.2.1-.6 0-.3 0-.6-.2-.9-.2-.3-.4-.5-.8-.5-.3 0-.6.2-.7.5-.2.4-.2.7-.2 1.2 0 .4.1.8.6 1.2 0-.1.1-.1.2-.2m12.8 14.5c.1 0 .1 0 .1-.1 0-.2-.1-.5-.4-.8-.3-.3-.8-.5-1.4-.6h-.4c-.1 0-.3 0-.4-.1.3-1 .4-1.8.4-2.5 0-1-.2-1.7-.6-2.4-.4-.6-.8-.9-1.3-1-.1.1-.1.1-.1.2.5.2 1 .6 1.3 1.2.3.7.4 1.3.4 2.1 0 .6-.1 1.4-.5 2.5-.4.2-.8.5-1.1 1.1 0 .1 0 .1.1.1 0 0 .1-.1.2-.3l.5-.5c.3-.2.5-.3.8-.3.5 0 1 .1 1.3.2.4.1.6.3.7.4.1.2.2.3.3.4 0 .3.1.4.1.4M16.5 7.7c-.1-.1-.1-.3-.1-.5 0-.4 0-.6.2-.9.2-.2.4-.3.6-.3.3 0 .5.2.7.4.1.3.2.5.2.8 0 .5-.2.8-.6.9 0 0 .1.1.2.1.2 0 .3.1.5.2.1-.6.2-1 .2-1.5 0-.6-.1-1-.3-1.3-.3-.3-.6-.4-1-.4-.3 0-.6.1-.9.3-.2.3-.3.5-.3.8 0 .5.1.9.3 1.3.1 0 .2.1.3.1m1.2 1.7c-1.3.9-2.4 1.3-3.2 1.3-.7 0-1.4-.3-2.1-.8.1.2.2.4.3.5l.6.6c.4.4.9.6 1.4.6.7 0 1.5-.4 2.6-1.1l.9-.6c.2-.2.4-.4.4-.7 0-.1 0-.2-.1-.2 0-.3-.5-.6-1.5-.9-.9-.4-1.6-.6-2.1-.6-.3 0-.8.2-1.5.6-.6.4-1 .8-1 1.2 0 0 .1.1.2.3.6.5 1.2.8 1.8.8.8 0 1.8-.4 3.2-1.4v.2c.1.1.1.2.1.2m2.4 20.7c.4.8 1.1 1.2 1.9 1.2.2 0 .4 0 .6-.1.2 0 .4-.1.5-.2.1-.1.2-.1.3-.2.2-.1.2-.1.3-.2l1.7-1.5c.4-.3.8-.6 1.3-.9l1-.5c.3-.1.5-.2.7-.4.1-.2.2-.3.2-.6s-.2-.5-.4-.7c-.2-.2-.4-.3-.6-.3-.2-.1-.4-.2-.7-.5-.2-.3-.4-.6-.5-1.1l-.1-.6c-.1-.3-.1-.5-.2-.6H26c-.1 0-.3.1-.4.3l-.6.6c-.1.2-.4.4-.6.6-.3.2-.6.3-.8.3-.8 0-1.2-.2-1.5-.7-.2-.3-.3-.7-.4-1.1-.2-.2-.3-.3-.5-.3-.5 0-.7.5-.7 1.6V27.3c0 .1-.1.3-.1.6-.1.3-.1.7-.1 1.1l-.2 1.1m-14.9-.6c1 .1 2.1.4 3.3.9 1.2.5 2 .7 2.3.7.7 0 1.3-.3 1.8-.9.1-.2.1-.4.1-.7 0-1-.6-2.2-1.8-3.7l-.7-.9c-.1-.2-.3-.5-.5-.9s-.4-.7-.6-.9c-.1-.2-.3-.5-.6-.7-.3-.2-.6-.4-.9-.5-.4.1-.7.2-.9.4s-.2.4-.2.6c0 .2-.1.4-.2.4-.1.1-.3.1-.5.2h-.6c-.5 0-.9.1-1.1.2-.3.3-.4.6-.4 1 0 .2 0 .4.1.8s.1.7.1.9c0 .4-.1.8-.4 1.3-.3.4-.4.8-.4 1 .2.4.9.7 2.1.8m3.4-9.3c0-.7.2-1.5.6-2.4.4-.9.7-1.5 1.1-1.9 0-.1-.1-.1-.2-.1l-.1-.2c-.3.3-.7 1-1.1 2.1-.4.9-.7 1.8-.7 2.4 0 .5.1.9.3 1.2.2.3.8.8 1.6 1.5l1.1.7c1.2 1 1.8 1.7 1.8 2.1 0 .2-.1.4-.4.7-.2.2-.5.4-.7.4v.1l.3.6c.4.6 1.4.9 2.6.9 2.3 0 4-.9 5.3-2.8 0-.5 0-.8-.1-1v-.4c0-.7.1-1.2.3-1.5.2-.3.4-.5.7-.5.2 0 .4.1.6.2.1-.8.1-1.5.1-2.1 0-.9 0-1.7-.2-2.4-.1-.6-.3-1.1-.5-1.5l-.6-.9c-.2-.3-.3-.6-.5-.9-.1-.4-.2-.7-.2-1.2-.3-.5-.5-1-.8-1.5-.2-.5-.4-1-.6-1.4l-.9.7c-1 .7-1.8 1-2.6 1-.6 0-1.1-.1-1.4-.5l-.6-.5c0 .3-.1.7-.3 1.1l-.6 1.2c-.3.7-.4 1.1-.5 1.4 0 .2-.1.4-.1.4l-.8 1.5c-.8 1.5-1.3 3-1.3 4.1 0 .2 0 .5.1.7-.5-.3-.7-.7-.7-1.3m7.4 9.7c-1.3 0-2.4.2-3.1.5-.5.6-1.1.9-1.9.9-.5 0-1.3-.2-2.4-.6-1.1-.4-2-.7-2.9-.8-.1 0-.3-.1-.6-.1s-.6-.1-.8-.1c-.2 0-.5-.1-.7-.2-.3-.1-.5-.2-.6-.3-.1-.1-.2-.3-.2-.4 0-.2 0-.3.1-.5s.2-.3.3-.4c.1-.1.1-.2.2-.3.1-.1.1-.2.1-.3 0-.1.1-.2.1-.3v-.3s0-.4-.1-1c-.1-.5-.1-.9-.1-1 0-.5.1-.8.3-1.1.2-.3.4-.4.7-.4h1.2c.1 0 .2-.1.5-.2.1-.2.1-.3.2-.4.1-.1.1-.2.1-.3 0-.1 0-.1.1-.2 0-.1.1-.2.2-.2-.1-.1-.1-.2-.1-.4v-.3c0-.4.2-.9.5-1.6l.4-.6.7-1.4c.2-.4.4-1 .6-1.8.2-.7.6-1.4 1.2-2.2l.8-.9c.5-.6.9-1.1 1.1-1.5.2-.4.3-.9.3-1.3 0-.2-.1-.8-.2-1.8s-.2-2.1-.2-3c0-.7.1-1.2.2-1.7s.4-1 .7-1.4c.3-.4.7-.8 1.3-1 .6-.2 1.3-.3 2.2-.3.3 0 .6 0 .9.1.3 0 .7.1 1.2.3.4.2.8.4 1.1.7.2.2.6.7.9 1.2.2.6.4 1.2.5 2.1.1.5.1 1 .2 1.7 0 .6.1 1 .1 1.3.1.3.1.7.2 1.2.1.4.2.8.4 1.1.2.4.4.8.7 1.2.3.5.7 1 1.1 1.6.9 1 1.6 2.2 2.1 3.3.5 1 .8 2.4.8 3.8 0 .7-.1 1.4-.3 2.1.2 0 .3.1.4.2s.2.5.3.9l.1.8c.1.2.2.4.5.6.2.2.4.3.7.5.2.1.5.2.7.4.2.2.3.4.3.6 0 .3-.1.6-.3.8-.2.2-.4.3-.7.4l-1.2.6c-.5.3-1 .7-1.5 1.1l-1 .9c-.4.4-.8.7-1.1.9-.3.2-.7.3-1.1.3l-.7-.1c-.8-.2-1.3-.6-1.6-1.3-1.8 0-3.1-.1-3.9-.1"></path></g></svg>
);

export function getPlatformIcon(
  platform: string,
  size: IconSize = "md",
): ReactNode {
  const className = sizeClassMap[size];

  switch (platform) {
    case "Android":
      return <AndroidRobotIcon className={className} />;
    case "iOS":
    case "Mac":
      return <AppleIcon className={className} />;
    case "Windows":
      return <WindowsLogoIcon className={className} />;
    case "Linux":
      return <LinuxTuxIcon className={className} />;
    case "Web":
      return <MonitorIcon className={className} />;
    default:
      return <MonitorIcon className={className} />;
  }
}

export function getPlatformAccentClass(
  platform: string,
): string {
  switch (platform) {
    case "Android":
      return "text-[#3DDC84]";
    case "Windows":
      return "text-[#0078D4]";
    case "Linux":
      return "text-[#FCC624]";
    default:
      return "text-[var(--text-secondary)]";
  }
}